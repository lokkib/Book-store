{"version":3,"file":"static/js/871.e15b6fc7.chunk.js","mappings":"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","sources":["components/ButtonGoBack/ButtonGoBack.tsx","components/CartItem/CartItem.tsx","components/CartEmpty/CartEmpty.tsx","webpack://Book-store/./src/components/PayingForm/ButtonClose/style.module.scss?d4e8","components/PayingForm/ButtonClose/ButtonClose.tsx","webpack://Book-store/./src/components/PayingForm/style.module.scss?f064","components/PayingForm/PayingForm.tsx","constants/animation.ts","components/SuccessPayment/SuccessIcon.tsx","components/SuccessPayment/SuccessPayment.tsx","pages/Cart.tsx","webpack://Book-store/./src/pages/style.module.scss?4cbc"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom'\n\nconst ButtonGoBack = () => {\n  const { pathname } = useLocation()\n  return (\n    <Link to=\"/Book-store/\" className=\"button button--outline button--add go-back-btn\">\n      <svg\n        width=\"8\"\n        height=\"14\"\n        viewBox=\"0 0 8 14\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M7 13L1 6.93015L6.86175 1\"\n          stroke=\"#D3D3D3\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n\n      <span>{pathname === '/cart' ? 'Вернуться назад' : 'Назад'}</span>\n    </Link>\n  )\n}\n\nexport default ButtonGoBack\n","import { useDispatch } from 'react-redux'\nimport { useState } from 'react'\nimport clsx from 'clsx'\nimport { CartItemProps } from '../../@types/props/CartItemProps'\nimport { addItem, minusItem, removeItem } from '../../redux/slices/cartSlice'\n\nconst CartItem = ({\n  formatType,\n  price,\n  author,\n  id,\n  imageUrl,\n  title,\n  language,\n  count,\n}: CartItemProps) => {\n  const [activeFormat] = useState(0)\n  const dispatch = useDispatch()\n  const formatNames = ['бумажная', 'электронная', 'аудиокнига']\n\n  const addOnClick = () => {\n    const item = {\n      id,\n      title,\n      price,\n      imageUrl,\n      author,\n      language,\n      format: formatNames[activeFormat],\n    }\n    dispatch(addItem(item))\n  }\n\n  const onClickMinus = (\n    itemId: string,\n    itemPrice: number,\n    bookLanguage: string\n  ) => {\n    dispatch(minusItem([itemId, itemPrice, bookLanguage]))\n  }\n\n  const onClickRemove = (\n    itemId: string,\n    itemPrice: number,\n    bookLanguage: string\n  ) => {\n    dispatch(removeItem([itemId, itemPrice, bookLanguage]))\n  }\n\n  return (\n    <div className=\"cart__item\">\n      <div className=\"cart__item-img\">\n        <img\n          className=\"product-block__image\"\n          src={imageUrl as string}\n          alt=\"product\"\n        />\n      </div>\n      <div className=\"cart__item-info\">\n        <h3>{title}</h3>\n        <p>{author}</p>\n        <p>\n          {language}, {formatType}\n        </p>\n      </div>\n      <div className=\"cart__item-count\">\n        <button\n          disabled={count === 1}\n          onClick={() => onClickMinus(id, price, language)}\n          className={clsx(\n            ' button button--outline button--circle cart__item-count-minus',\n            { 'cart__item-count-minus--disabled': count === 1 }\n          )}\n        >\n          <svg\n            width=\"10\"\n            height=\"10\"\n            viewBox=\"0 0 10 10\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n              fill=\"#EB5A1E\"\n            />\n            <path\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n              fill=\"#EB5A1E\"\n            />\n          </svg>\n        </button>\n        <b>{count}</b>\n        <div\n          onKeyDown={addOnClick}\n          tabIndex={0}\n          role=\"button\"\n          onClick={addOnClick}\n          className=\"button button--outline button--circle cart__item-count-plus\"\n        >\n          <svg\n            width=\"10\"\n            height=\"10\"\n            viewBox=\"0 0 10 10\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n              fill=\"#EB5A1E\"\n            />\n            <path\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n              fill=\"#EB5A1E\"\n            />\n          </svg>\n        </div>\n      </div>\n      <div className=\"cart__item-price\">\n        <b>{+price * count} ₽</b>\n      </div>\n      <div\n        onKeyDown={addOnClick}\n        tabIndex={0}\n        role=\"button\"\n        onClick={() => onClickRemove(id, price, language)}\n        className=\"cart__item-remove\"\n      >\n        <div className=\"button button--outline button--circle\">\n          <svg\n            width=\"10\"\n            height=\"10\"\n            viewBox=\"0 0 10 10\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n              fill=\"#EB5A1E\"\n            />\n            <path\n              d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n              fill=\"#EB5A1E\"\n            />\n          </svg>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CartItem\n","import { Link } from 'react-router-dom'\nimport cartEmptyImg from '../../assets/img/empty-cart.png'\n\nconst CartEmpty = () => {\n  return (\n    <div className=\"cart cart--empty\">\n      <h2>\n        Корзина пустая <span>😕</span>\n      </h2>\n      <p>\n        Вероятней всего, вы не заказывали ещё пиццу.\n        <br />\n        Для того, чтобы заказать пиццу, перейди на главную страницу.\n      </p>\n      <img src={cartEmptyImg} alt=\"Empty cart\" />\n      <Link to=\"/Book-store/\" className=\"button button--black\">\n        <span>Вернуться назад</span>\n      </Link>\n    </div>\n  )\n}\n\nexport default CartEmpty\n","// extracted by mini-css-extract-plugin\nexport default {\"closeWrapper\":\"style_closeWrapper__1-7PC\",\"deleteImgWrapper\":\"style_deleteImgWrapper__Gjcpk\",\"deleteImg\":\"style_deleteImg__QxXOh\",\"miniCloseLine\":\"style_miniCloseLine__nyR0H\"};","import styles from './style.module.scss'\nimport ButtonCloseProps from '../../../@types/props/ButtonCloseProps'\n\nconst ButtonClose = ({ classType, onClick }: ButtonCloseProps) => {\n  return (\n    <div className={styles.closeWrapper}>\n      <div\n        aria-label=\"close auth window\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={onClick}\n        onKeyDown={() => onClick}\n        className={styles[classType]}\n      />\n    </div>\n  )\n}\n\nexport default ButtonClose\n","// extracted by mini-css-extract-plugin\nexport default {\"signInWrapper\":\"style_signInWrapper__6ZI64\",\"formPaying\":\"style_formPaying__mVH21\",\"card__block\":\"style_card__block__eRQmW\",\"card__block__inner\":\"style_card__block__inner__vyDhM\",\"form\":\"style_form__0KZnq\",\"formActions\":\"style_formActions__EGkvR\",\"error\":\"style_error__tJKYl\"};","import { useState, useEffect } from 'react'\nimport Cards from 'react-credit-cards-2'\nimport * as Yup from 'yup'\n\nimport { useDispatch } from 'react-redux'\nimport { Formik, Form } from 'formik'\n\nimport {\n  closePayingForm,\n  showSuccessNotification,\n} from '../../redux/slices/payingFormSlice'\nimport ButtonClose from './ButtonClose/ButtonClose'\nimport styles from './style.module.scss'\nimport 'react-credit-cards-2/dist/lib/styles.scss'\nimport { PayingFormProps } from '../../@types/props/PayingFormProps'\n\nconst SignupSchema = Yup.object().shape({\n  number: Yup.string()\n    .min(16, 'Поле должно содержать минимум 16 цифр')\n    .required('Поле обязательно для заполнения'),\n  name: Yup.string().required('Поле обязательно для заполнения'),\n  expiry: Yup.string()\n    .min(4, 'Поле должно содержать минимум 4 цифры')\n    .required('Поле обязательно для заполнения'),\n  cvc: Yup.string()\n    .min(3, 'Поле должно содержать минимум 3 цифры')\n    .required('Поле обязательно для заполнения'),\n})\n\nconst PayingForm = ({ onClick }: PayingFormProps) => {\n  const [state, setState] = useState({\n    number: '',\n    expiry: '',\n    cvc: '',\n    name: '',\n    focus: '',\n  })\n\n  const dispatch = useDispatch()\n\n  const [successNotIfication, setSuccessNotification] = useState(false)\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let { name, value } = e.target\n\n    value = value\n      .trimStart()\n      .toLocaleUpperCase()\n      .replace(/[^a-z]/gi, '')\n    setState((prev) => ({ ...prev, [name]: value }))\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      setSuccessNotification(false)\n    }, 2000)\n  }, [successNotIfication])\n\n  const handleInputCardNumber = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let { name, value } = e.target\n\n    value = value.slice(0, 16)\n\n    setState((prev) => ({ ...prev, [name]: value }))\n  }\n\n  const handleInputChangeCVC = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let { name, value } = e.target\n    value = value.slice(0, 3)\n    setState((prev) => ({ ...prev, [name]: value }))\n  }\n\n  const handleInputChangeExpiry = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let { name, value } = e.target\n    value = value.slice(0, 4)\n    setState((prev) => ({ ...prev, [name]: value }))\n  }\n\n  const handleInputFocus = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setState((prev) => ({ ...prev, focus: e.target.name }))\n  }\n\n  const handleSubmit = () => {\n    dispatch(closePayingForm(false))\n    dispatch(showSuccessNotification(true))\n  }\n\n  return (\n    <div className={styles.card__block}>\n      <ButtonClose classType=\"miniCloseLine\" onClick={onClick} />\n      <div className={styles.card__block__form}>\n        <div className={styles.card__block__inner}>\n          <Cards\n            number={state.number}\n            expiry={state.expiry}\n            cvc={state.cvc}\n            name={state.name}\n            focused={state.focus}\n          />\n        </div>\n        <Formik\n          initialValues={{\n            number: '',\n            expiry: '',\n            cvc: '',\n            name: '',\n          }}\n          validationSchema={SignupSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ handleChange, errors, touched }) => (\n            <Form className={styles.form}>\n              <input\n                type=\"number\"\n                name=\"number\"\n                placeholder=\"Номер карты\"\n                value={state.number}\n                onChange={(e) => [handleInputCardNumber(e), handleChange(e)]}\n                onFocus={handleInputFocus}\n              />\n              <p className={styles.error}>\n                {errors.number && touched.number && errors.number}\n              </p>\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Имя владельца карты\"\n                value={state.name}\n                onChange={(e) => [handleInputChange(e), handleChange(e)]}\n                onFocus={handleInputFocus}\n              />\n              <p className={styles.error}>\n                {errors.name && touched.name && errors.name}\n              </p>\n              <input\n                type=\"number\"\n                name=\"expiry\"\n                placeholder=\"Действительна до\"\n                pattern=\"\\d\\d/\\d\\d\"\n                value={state.expiry}\n                onChange={(e) => [handleInputChangeExpiry(e), handleChange(e)]}\n                onFocus={handleInputFocus}\n              />\n              <p className={styles.error}>\n                {errors.expiry && touched.expiry && errors.expiry}\n              </p>\n              <input\n                type=\"number\"\n                name=\"cvc\"\n                placeholder=\"CVC\"\n                value={state.cvc}\n                onChange={(e) => [handleInputChangeCVC(e), handleChange(e)]}\n                onFocus={handleInputFocus}\n              />\n              <p className={styles.error}>\n                {errors.cvc && touched.cvc && errors.cvc}\n              </p>\n              <div className={styles.formActions}>\n                <button type=\"submit\">Оплатить</button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  )\n}\n\nexport default PayingForm\n","const backdrop = {\n  hidden: {\n    y: '-500px',\n    opacity: 0,\n  },\n  visible: {\n    y: '0px',\n    opacity: 1,\n    transition: {\n      delay: 0.1,\n      duration: 1,\n    },\n  },\n  exit: {\n    y: '500px',\n    opacity: 0,\n    transition: {\n      duration: 0.7,\n    },\n  },\n}\n\nexport default backdrop\n","const SuccessIcon = () => {\n  return (\n    <svg\n      height=\"150\"\n      viewBox=\"0 0 40 40\"\n      version=\"1.1\"\n      width=\"150\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g transform=\"translate(0 -1028.4)\">\n        <path\n          d=\"m22 12c0 5.523-4.477 10-10 10-5.5228 0-10-4.477-10-10 0-5.5228 4.4772-10 10-10 5.523 0 10 4.4772 10 10z\"\n          fill=\"#27ae60\"\n          transform=\"translate(0 1029.4)\"\n        />\n        <path\n          d=\"m22 12c0 5.523-4.477 10-10 10-5.5228 0-10-4.477-10-10 0-5.5228 4.4772-10 10-10 5.523 0 10 4.4772 10 10z\"\n          fill=\"#2ecc71\"\n          transform=\"translate(0 1028.4)\"\n        />\n        <path\n          d=\"m16 1037.4-6 6-2.5-2.5-2.125 2.1 2.5 2.5 2 2 0.125 0.1 8.125-8.1-2.125-2.1z\"\n          fill=\"#27ae60\"\n        />\n        <path\n          d=\"m16 1036.4-6 6-2.5-2.5-2.125 2.1 2.5 2.5 2 2 0.125 0.1 8.125-8.1-2.125-2.1z\"\n          fill=\"#ecf0f1\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default SuccessIcon\n","import SuccessIcon from './SuccessIcon'\n\nconst SuccessPayment = () => {\n  return <SuccessIcon />\n}\n\nexport default SuccessPayment\n","import { useSelector, useDispatch } from 'react-redux'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { useEffect } from 'react'\nimport styles from './style.module.scss'\nimport CartItem from '../components/CartItem/CartItem'\nimport { cartSelector, clearItems } from '../redux/slices/cartSlice'\nimport CartEmpty from '../components/CartEmpty/CartEmpty'\nimport { Product } from '../@types/types/Product'\nimport ButtonGoBack from '../components/ButtonGoBack/ButtonGoBack'\nimport PayingForm from '../components/PayingForm/PayingForm'\nimport { RootState } from '../redux/store'\nimport {\n  closePayingForm,\n  hideSuccessNotification,\n  openPayingForm,\n} from '../redux/slices/payingFormSlice'\nimport backdrop from '../constants/animation'\nimport SuccessPayment from '../components/SuccessPayment/SuccessPayment'\n\nconst Cart = () => {\n  const dispatch = useDispatch()\n  const { items, totalPrice } = useSelector(cartSelector)\n\n  const successNotIfication = useSelector(\n    (state: RootState) => state.payingFormReducer.successNotification\n  )\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      dispatch(hideSuccessNotification(false))\n    }, 5000)\n\n    return () => clearTimeout(timer)\n  }, [successNotIfication])\n\n  const onClickClearItems = () => {\n    dispatch(clearItems())\n  }\n  const isPayingFormOpen = useSelector(\n    (state: RootState) => state.payingFormReducer.payingForm\n  )\n  const itemsAdded = items.reduce((ac: number, el: Product) => {\n    ac += el.count\n    return ac\n  }, 0)\n\n  const openPayingFormOnClick = () => {\n    dispatch(openPayingForm(true))\n  }\n\n  const closePayingFormOnClick = () => {\n    dispatch(closePayingForm(false))\n  }\n\n  return (\n    <>\n      <AnimatePresence>\n        {successNotIfication && (\n          <motion.div\n            variants={backdrop}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            className={\n              successNotIfication ? styles.modalBlock : styles.modalDisplayNone\n            }\n          >\n            <SuccessPayment />\n          </motion.div>\n        )}\n      </AnimatePresence>\n      <AnimatePresence>\n        {isPayingFormOpen && (\n          <motion.div\n            variants={backdrop}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            className={\n              isPayingFormOpen ? styles.modalBlock : styles.modalDisplayNone\n            }\n          >\n            <PayingForm onClick={closePayingFormOnClick} />\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        transition={{ duration: 1 }}\n        className=\"container container--cart\"\n      >\n        {items.length ? (\n          <div className=\"cart\">\n            <div className=\"cart__top\">\n              <h2 className=\"content__title\">\n                <svg\n                  width=\"18\"\n                  height=\"18\"\n                  viewBox=\"0 0 18 18\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\n                    stroke=\"white\"\n                    strokeWidth=\"1.8\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                  <path\n                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\n                    stroke=\"white\"\n                    strokeWidth=\"1.8\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                  <path\n                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\n                    stroke=\"white\"\n                    strokeWidth=\"1.8\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                </svg>\n                Корзина\n              </h2>\n              <div\n                role=\"button\"\n                onKeyDown={onClickClearItems}\n                tabIndex={0}\n                onClick={onClickClearItems}\n                className=\"cart__clear\"\n              >\n                <svg\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M2.5 5H4.16667H17.5\"\n                    stroke=\"#B6B6B6\"\n                    strokeWidth=\"1.2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                  <path\n                    d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\n                    stroke=\"#B6B6B6\"\n                    strokeWidth=\"1.2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                  <path\n                    d=\"M8.33337 9.16667V14.1667\"\n                    stroke=\"#B6B6B6\"\n                    strokeWidth=\"1.2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                  <path\n                    d=\"M11.6666 9.16667V14.1667\"\n                    stroke=\"#B6B6B6\"\n                    strokeWidth=\"1.2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                </svg>\n\n                <span>Очистить корзину</span>\n              </div>\n            </div>\n            <div className=\"cart__content__items\">\n              {items.map((el) => (\n                <CartItem {...el} />\n              ))}\n            </div>\n            <div className=\"cart__bottom\">\n              <div className=\"cart__bottom-details\">\n                <span>\n                  {' '}\n                  Всего книг: <b>{itemsAdded} шт.</b>{' '}\n                </span>\n                <span>\n                  {' '}\n                  Сумма заказа: <b>{totalPrice} ₽</b>{' '}\n                </span>\n              </div>\n              <div className=\"cart__bottom-buttons\">\n                <button\n                  onClick={openPayingFormOnClick}\n                  className=\"button pay-btn\"\n                >\n                  Оплатить сейчас\n                </button>\n                <ButtonGoBack />\n              </div>\n            </div>\n          </div>\n        ) : (\n          <CartEmpty />\n        )}\n      </motion.div>\n    </>\n  )\n}\n\nexport default Cart\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"style_loading__SbVKu\",\"product\":\"style_product__fNODI\",\"product__item__block\":\"style_product__item__block__J7Atr\",\"product__item\":\"style_product__item__5CI6h\",\"product__item__rating\":\"style_product__item__rating__DEgpd\",\"modalBlock\":\"style_modalBlock__pXsYO\",\"modalDisplayNone\":\"style_modalDisplayNone__uAXbL\",\"product__description\":\"style_product__description__cbUjc\"};"],"names":["pathname","useLocation","to","className","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","formatType","price","author","id","imageUrl","title","language","count","useState","activeFormat","dispatch","useDispatch","formatNames","addOnClick","item","format","addItem","src","alt","disabled","onClick","itemId","itemPrice","bookLanguage","minusItem","clsx","onKeyDown","tabIndex","role","removeItem","cartEmptyImg","classType","styles","SignupSchema","Yup","shape","number","min","required","name","expiry","cvc","focus","state","setState","successNotIfication","setSuccessNotification","handleInputChange","e","target","value","trimStart","toLocaleUpperCase","replace","prev","useEffect","setTimeout","handleInputCardNumber","slice","handleInputChangeCVC","handleInputChangeExpiry","handleInputFocus","focused","initialValues","validationSchema","onSubmit","closePayingForm","showSuccessNotification","handleChange","errors","touched","type","placeholder","onChange","onFocus","pattern","hidden","y","opacity","visible","transition","delay","duration","exit","version","transform","useSelector","cartSelector","items","totalPrice","payingFormReducer","successNotification","timer","hideSuccessNotification","clearTimeout","onClickClearItems","clearItems","isPayingFormOpen","payingForm","itemsAdded","reduce","ac","el","AnimatePresence","motion","variants","backdrop","initial","animate","length","map","openPayingForm","ButtonGoBack"],"sourceRoot":""}